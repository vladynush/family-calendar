import {FC, useState} from "react";
import EventCard from "../../entities/Event/ui/EventCard.tsx";
import {CalendarEvent} from "../../entities/Event/model/types.ts";
import styles from './CalendarPage.module.css'
import Modal from "../../shared/ui/Modal/Modal.tsx";
import EventDetails from "../../entities/Event/ui/EventDetails.tsx";
import Layout from "../../shared/ui/Layout/Layout.tsx";

export const mockEvents: CalendarEvent[] = [
    {
        id: '1',
        title: '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ø–∞–ø—ã',
        date: '2025-05-12',
        description: '–ù–µ –∑–∞–±—ã—Ç—å –∫—É–ø–∏—Ç—å —Ç–æ—Ä—Ç –∏ –ø–æ–¥–∞—Ä–æ–∫ üéÅ',
    },
    {
        id: '2',
        title: '–ü–æ–µ–∑–¥–∫–∞ –≤ –ü–∏—Ç–µ—Ä',
        date: '2025-06-01',
        description: '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∂–∏–ª—å—ë, –∫—É–ø–∏—Ç—å –±–∏–ª–µ—Ç—ã, —Å–æ–±—Ä–∞—Ç—å –≤–µ—â–∏',
    },
    {
        id: '3',
        title: '–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ',
        date: '2025-04-20',
        description: '–®–∫–æ–ª–∞, 7–ë –∫–ª–∞—Å—Å, –≤ 18:00',
    },
    {
        id: '4',
        title: '–ó–∞–ø–∏—Å—å –∫ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥—É',
        date: '2025-04-25',
        description: '–ö–ª–∏–Ω–∏–∫–∞ "–ó—É–±–∞—Å—Ç–∏–∫", 15:30',
    },
    {
        id: '5',
        title: '–ú–∞—Ä–∞—Ñ–æ–Ω –ø–æ –±–µ–≥—É',
        date: '2025-07-15',
        description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–±–µ–≥—É, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é',
    },
    {
        id: '6',
        title: '–í—Å—Ç—Ä–µ—á–∞ —Å –¥—Ä—É–∑—å—è–º–∏',
        date: '2025-05-02',
        description: '–í–µ—á–µ—Ä–æ–º —à–∞—à–ª—ã–∫–∏ —É –í–∞–Ω–∏ –Ω–∞ –¥–∞—á–µ',
    },
];

const CalendarPage: FC = () => {
    const [selectedEvent, setSelectedEvent] = useState<CalendarEvent | null>(null);

    return (
        <Layout title={'–ì–ª–∞–≤–Ω–∞—è'}>
            <div className={styles.page}>
                <h2 className={styles.heading}>–°–æ–±—ã—Ç–∏—è</h2>

                <div className={styles.list}>
                    {mockEvents.map((event) => (
                        <EventCard key={event.id} event={event} onClick={() => setSelectedEvent(event)}/>
                    ))}
                </div>

                <Modal visible={!!selectedEvent} onClose={() => setSelectedEvent(null)}>
                    {selectedEvent && <EventDetails {...selectedEvent} />}
                </Modal>
            </div>
        </Layout>
    );
};

export default CalendarPage;